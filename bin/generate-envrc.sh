#!/usr/bin/env bash
set -euo pipefail

# Default values
OUTPUT_FILE=".envrc.local"
ROLES=("ADMIN" "BATCHER" "PROPOSER" "SEQUENCER" "CHALLENGER")
CUSTOM_L1_RPC="http://localhost:8545"
CUSTOM_L2_RPC="http://localhost:8545"
CUSTOM_L3_RPC=""

# Function to display usage information
usage() {
    echo "Usage: $0 [OPTIONS]"
    echo "Generate .envrc.local file with wallet accounts for different roles"
    echo
    echo "Options:"
    echo "  -o, --output FILE       Output file (default: .envrc.local)"
    echo "  --l1-rpc URL            Custom L1 RPC URL"
    echo "  --l2-rpc URL            Custom L2 RPC URL"
    echo "  --l3-rpc URL            Custom L3 RPC URL"
    echo "  -h, --help              Display this help message"
    echo
    echo "This script generates wallet accounts for admin, batcher, proposer,"
    echo "sequencer, and challenger roles using 'cast wallet new' command."
}

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        -o|--output)
            OUTPUT_FILE="$2"
            shift 2
            ;;
        --l1-rpc)
            CUSTOM_L1_RPC="$2"
            shift 2
            ;;
        --l2-rpc)
            CUSTOM_L2_RPC="$2"
            shift 2
            ;;
        --l3-rpc)
            CUSTOM_L3_RPC="$2"
            shift 2
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            usage
            exit 1
            ;;
    esac
done

# Generate header for the output file
cat > "$OUTPUT_FILE" << EOL
# Generated by $(basename "$0") on $(date)
# This file contains private keys - DO NOT commit to version control!

EOL

echo "Generating accounts for all roles..."

# Generate all wallets in one go
WALLET_COUNT=${#ROLES[@]}
WALLETS_JSON=$(cast wallet new -n $WALLET_COUNT --json)

# Loop through the generated wallets and assign them to roles
for i in "${!ROLES[@]}"; do
    role=${ROLES[$i]}
    # Use jq to extract the data for the current wallet
    wallet=$(echo "$WALLETS_JSON" | jq -r ".[$i]")

    # Extract address and private key
    address=$(echo "$wallet" | jq -r '.address')
    private_key=$(echo "$wallet" | jq -r '.private_key')

    # Append to the output file
    cat >> "$OUTPUT_FILE" << EOL
# $role account
export GS_${role}_ADDRESS=0x${address}
export GS_${role}_PRIVATE_KEY=${private_key}

EOL
done

# Add RPC configuration
cat >> "$OUTPUT_FILE" << EOL
# RPC configuration
export L1_RPC_URL="${CUSTOM_L1_RPC}"
export L2_RPC_URL="${CUSTOM_L2_RPC}"
export L3_RPC_URL="${CUSTOM_L3_RPC}"

# MinIO
export MINIO_ENDPOINT=""
export MINIO_BUCKET=""
export MINIO_ACCESS_KEY=""
export MINIO_SECRET_KEY=""
EOL

echo "Generated wallet accounts and configuration in $OUTPUT_FILE"
echo "Warning: This file contains private keys - keep it secure and DO NOT commit to version control!"

# Print generated addresses (not keys)
echo -e "\nGenerated accounts:"
for role in "${ROLES[@]}"; do
    address=$(grep "GS_${role}_ADDRESS" "$OUTPUT_FILE" | cut -d'=' -f2)
    echo "${role}: ${address}"
done
